---
import Layout from '@layouts/Layout.astro';
import ContentPage from '@views/index-sections/ContentPage';
import {
  getTitleContentsByID,
  getTitleContentsByCategoryAndGetOnlyID,
  getRelatedArticles,
  getTitleContents,
} from '@assets/js/titleContents';

const env: ImportMetaEnv = import.meta.env;
const { category, id } = Astro.params;

const payload = {
  _id: id,
  apiUrl: env.VITE_SERVER_URL,
};
const mainContent = await getTitleContentsByID(payload);
const relatedArticles = await getRelatedArticles(payload);
const titleContents = await getTitleContents(payload);

const title = mainContent.headTitle ? mainContent.headTitle : mainContent.title;
const description = mainContent.headDescription;
const keywords = mainContent.headKeyword;

export async function getStaticPaths() {
  const navItems = ['lottery', 'sports', 'poker', 'matka', 'casino'];
  const getStaticPaths = new Promise((resolve, reject) => {
    const staticPaths = navItems.map(async (category) => {
      const listPayload = {
        categoryName: category,
        page: 1,
        apiUrl: import.meta.env.VITE_SERVER_URL,
      };
      const idArray = await getTitleContentsByCategoryAndGetOnlyID(listPayload);
      return idArray.map((id) => [
        {
          params: {
            category: category,
            id: id,
          },
        },
      ]);
    });

    Promise.all(staticPaths).then((res) => {
      const paths = res.flat(2);
      console.log('ðŸš€ ~ file: index.astro:52 ~ Promise.all ~ paths:', paths);
      resolve(paths);
    });
  });
  const staticPaths = await getStaticPaths;
  return staticPaths;
}
---

<Layout
  title={title}
  description={description}
  keywords={keywords}
  path={'/'}
>
  <ContentPage
    client:load
    category={category}
    mainContent={mainContent}
    relatedArticles={relatedArticles}
    titleContents={titleContents}
  />
</Layout>
